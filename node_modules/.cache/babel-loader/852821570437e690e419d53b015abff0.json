{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgolden/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Decks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\n\nfunction Decks() {\n  // create empty state array\n  const [decks, setDecks] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    setDecks([]);\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const response = await listDecks(abortController.signal);\n        setDecks(response);\n      } catch (error) {\n        throw error;\n      }\n    }\n\n    loadDecks();\n    return () => {\n      console.log(\"Clean Up\");\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, decks.map(deck => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, deck.name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, deck.description)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deckId}`,\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, \"View\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deckId}/study`,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, \"Study\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      name: \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, \"Delete\"))));\n  })));\n}\n\nexport default Decks;","map":{"version":3,"sources":["/Users/elliotgolden/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Decks.js"],"names":["React","useState","useEffect","useParams","Link","listDecks","Decks","decks","setDecks","deckId","abortController","AbortController","loadDecks","response","signal","error","console","log","abort","map","deck","name","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,SAASC,KAAT,GAAiB;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,UAAME,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,mBAAeC,SAAf,GAA2B;AACvB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMR,SAAS,CAACK,eAAe,CAACI,MAAjB,CAAhC;AACAN,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,OAHD,CAGE,OAAOE,KAAP,EAAc;AACZ,cAAMA,KAAN;AACH;AACJ;;AACDH,IAAAA,SAAS;AACT,WAAO,MAAM;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAP,MAAAA,eAAe,CAACQ,KAAhB;AACH,KAHD;AAIH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AACjB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,IAAV,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,WAAT,CADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASb,MAAO,EAA3B;AAA8B,MAAA,SAAS,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASA,MAAO,QAA3B;AAAoC,MAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CALJ,CAPJ,CADJ;AAmBH,GApBA,CADL,CADJ,CADJ;AA2BH;;AAED,eAAeH,KAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\"\n\nfunction Decks() {\n    // create empty state array\n    const [decks, setDecks] = useState([]);\n    const { deckId } = useParams();\n\n    useEffect(() => {\n        setDecks([]);\n        const abortController = new AbortController();\n        async function loadDecks() {\n            try {\n                const response = await listDecks(abortController.signal);\n                setDecks(response);\n            } catch (error) {\n                throw error;\n            }\n        }\n        loadDecks();\n        return () => {\n            console.log(\"Clean Up\");\n            abortController.abort();\n        }\n    }, []);\n\n    return (\n        <div>\n            <ul>\n                {decks.map((deck) => {\n                    return (\n                        <li>\n                            <div>\n                                <h4>{deck.name}</h4>\n                            </div>\n                            <div>\n                                <p>{deck.description}</p>\n                            </div>\n                            <div>\n                                <div>\n                                    <Link to={`/decks/${deckId}`} className=\"btn btn-secondary\">View</Link>\n                                    <Link to={`/decks/${deckId}/study`} className=\"btn btn-primary\">Study</Link>\n                                </div>\n                                <div>\n                                    <button name=\"delete\">Delete</button>\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Decks;"]},"metadata":{},"sourceType":"module"}