{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgolden/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Deck/StudyCard.js\";\nimport React, { useState } from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\n\nfunction StudyCard({\n  cards\n}) {\n  const initialCardState = {\n    flipped: false,\n    currentCard: 0\n  };\n  const [session, setSession] = useState(initialCardState);\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams(); // loop through the cards array then prompt restart\n\n  const handleNext = () => {\n    if (session.currentCard < cards.length - 1) {\n      setSession({ ...session,\n        currentCard: session.currentCard + 1,\n        flipped: false\n      });\n    } else {\n      window.confirm(\"Restart cards? \\n \\n \\n Click 'cancel' to return to the home page.\") ? setSession(initialCardState) : history.push(\"/\");\n    }\n  }; // if more than 3 cards, display cards with flip and next button\n\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Card \", session.currentCard + 1, \" of \", cards.length), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, session.flipped ? cards[session.currentCard].back : cards[session.currentCard].front), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary mr-2\",\n      onClick: () => setSession({ ...session,\n        flipped: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Flip\"), session.flipped && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    }, \"Next\"))));\n  } else {\n    // if less than 3, display message and button to add cards\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Not enough cards\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"You need a minimum of 3 cards to study. There are \", cards.length, \" cards in this deck.\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deckId}/cards/new`,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"+ Add Cards\"));\n  }\n}\n\nexport default StudyCard;","map":{"version":3,"sources":["/Users/elliotgolden/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Deck/StudyCard.js"],"names":["React","useState","useHistory","Link","useParams","StudyCard","cards","initialCardState","flipped","currentCard","session","setSession","history","deckId","handleNext","length","window","confirm","push","back","front"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,SAA3B,QAA4C,kBAA5C;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA4B;AAC1B,QAAMC,gBAAgB,GAAG;AAAEC,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,WAAW,EAAE;AAA/B,GAAzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,gBAAD,CAAtC;AACA,QAAMK,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaT,SAAS,EAA5B,CAJ0B,CAM1B;;AACA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAIJ,OAAO,CAACD,WAAR,GAAsBH,KAAK,CAACS,MAAN,GAAc,CAAxC,EAA2C;AACzCJ,MAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETD,QAAAA,WAAW,EAAEC,OAAO,CAACD,WAAR,GAAsB,CAF1B;AAGTD,QAAAA,OAAO,EAAE;AAHA,OAAD,CAAV;AAKD,KAND,MAMO;AACLQ,MAAAA,MAAM,CAACC,OAAP,CACE,oEADF,IAEMN,UAAU,CAACJ,gBAAD,CAFhB,GAEqCK,OAAO,CAACM,IAAR,CAAa,GAAb,CAFrC;AAGD;AACF,GAZD,CAP0B,CAoB1B;;;AACA,MAAIZ,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AACpB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQL,OAAO,CAACD,WAAR,GAAsB,CAD9B,UACqCH,KAAK,CAACS,MAD3C,CADF,eAIE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEL,OAAO,CAACF,OAAR,GACEF,KAAK,CAACI,OAAO,CAACD,WAAT,CAAL,CAA2BU,IAD7B,GAEEb,KAAK,CAACI,OAAO,CAACD,WAAT,CAAL,CAA2BW,KAH/B,CAJF,eAQE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AACA,MAAA,OAAO,EAAE,MAAMT,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaF,QAAAA,OAAO,EAAE;AAAtB,OAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAYEE,OAAO,CAACF,OAAR,iBACC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAEM,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbH,CADF,CADF,CADF;AAsBD,GAvBD,MAuBO;AACL;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAsDR,KAAK,CAACS,MAA5D,yBAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASF,MAAO,YAA3B;AAAwC,MAAA,SAAS,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AASD;AACF;;AAED,eAAeR,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\n\nfunction StudyCard({cards}) {\n  const initialCardState = { flipped: false, currentCard: 0 };\n  const [session, setSession] = useState(initialCardState);\n  const history = useHistory();\n  const { deckId } = useParams();\n\n  // loop through the cards array then prompt restart\n  const handleNext = () => {\n    if (session.currentCard < cards.length -1) {\n      setSession({\n        ...session,\n        currentCard: session.currentCard + 1,\n        flipped: false,\n        });\n    } else {\n      window.confirm(\n        \"Restart cards? \\n \\n \\n Click 'cancel' to return to the home page.\"\n        ) ? setSession(initialCardState) : history.push(\"/\");\n    }\n  };\n  // if more than 3 cards, display cards with flip and next button\n  if (cards.length > 2) {\n    return (\n      <div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              Card {session.currentCard + 1} of {cards.length}\n            </h5>\n            <p className=\"card-text\">{\n              session.flipped \n              ? cards[session.currentCard].back \n              : cards[session.currentCard].front}</p>\n            <button className=\"btn btn-secondary mr-2\"\n            onClick={() => setSession({...session, flipped: true})}>Flip\n            </button>\n            {\n            session.flipped && \n            (<button className=\"btn btn-primary\" onClick={handleNext}>Next</button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    // if less than 3, display message and button to add cards\n    return (\n      <div>\n        <h2>Not enough cards</h2>\n        <p>You need a minimum of 3 cards to study. There are {cards.length} cards in this deck.</p>\n        <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">\n          + Add Cards\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default StudyCard;"]},"metadata":{},"sourceType":"module"}