{"ast":null,"code":"var _jsxFileName = \"/Users/elliotgolden/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Decks.js\";\nimport React, { useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteDeck, listDecks, updateDeck } from \"../utils/api\";\n\nfunction Decks({\n  decks,\n  setDecks\n}) {\n  const history = useHistory();\n  const abortController = new AbortController();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    setDecks([]);\n\n    async function loadDecks() {\n      try {\n        const response = await listDecks(abortController.signal);\n        setDecks(response);\n      } catch (error) {\n        throw error;\n      }\n    }\n\n    loadDecks();\n    return () => {\n      // console.log(\"Clean Up\");\n      abortController.abort();\n    };\n  }, [setDecks]);\n\n  const handleDelete = async deck => {\n    if (window.confirm(\"Delete this deck? \\n \\n \\n You will not be able to recover it.\")) {\n      await deleteDeck(deck.id);\n      updateDeck(-1);\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, decks.map(deck => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"card m-2\",\n      key: deck.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, deck.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, deck.cards.length, \" cards\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, deck.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-3\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deck.id}`,\n      className: \"btn btn-secondary m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, \"View\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/decks/${deck.id}/study`,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, \"Study\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, \"Delete\"))));\n  })));\n}\n\nexport default Decks;","map":{"version":3,"sources":["/Users/elliotgolden/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Decks.js"],"names":["React","useEffect","Link","useHistory","useParams","deleteDeck","listDecks","updateDeck","Decks","decks","setDecks","history","abortController","AbortController","deckId","loadDecks","response","signal","error","abort","handleDelete","deck","window","confirm","id","push","map","display","justifyContent","name","cards","length","description"],"mappings":"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","sourcesContent":["import React, { useEffect} from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteDeck, listDecks, updateDeck } from \"../utils/api\"\n\nfunction Decks({decks, setDecks}) {\n    const history = useHistory();\n    const abortController = new AbortController();\n    const { deckId } = useParams();\n\n    useEffect(() => {\n        setDecks([]);\n        async function loadDecks() {\n            try {\n                const response = await listDecks(abortController.signal);\n                setDecks(response);\n            } catch (error) {\n                throw error;\n            }\n        }\n\n        loadDecks();\n        return () => {\n            // console.log(\"Clean Up\");\n            abortController.abort();\n        }    \n    }, [setDecks]);\n\n    const handleDelete = async (deck) => {\n        if (window.confirm(\"Delete this deck? \\n \\n \\n You will not be able to recover it.\")) {\n            await deleteDeck(deck.id);\n            updateDeck(-1);\n            history.push(\"/\");\n        }\n    }\n\n    return (\n        <div>\n            <ul>\n                {decks.map((deck) => {\n                    return (\n                        <li className=\"card m-2\" key={deck.id}>\n                            <div className=\"card-body\" style={{display: \"flex\", justifyContent:\"space-between\"}}>\n                                <h4 className=\"card-title\">{deck.name}</h4>\n                                <p>{deck.cards.length} cards</p>\n                            </div>\n                            <div className=\"card-body\">\n                                <p className=\"card-text\">{deck.description}</p>\n                            </div>\n                            <div className=\"px-3\" style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <div>\n                                    <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary m-2\">View</Link>\n                                    <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">Study</Link>\n                                </div>\n                                <div>\n                                    <button className=\"btn btn-danger\" onClick={handleDelete}>Delete</button>\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Decks;"]},"metadata":{},"sourceType":"module"}